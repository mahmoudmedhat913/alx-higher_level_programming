Import:
	>>> MyList = __import__("1-my_list").MyList

Check module doc:
	>>> m = __import__("1-my_list").__doc__
	>>> len(m) > 1
	True

Check class doc:
	>>> c = __import__("1-my_list").MyList.__doc__
	>>> len(c) > 1
	True

Check method doc:
	>>> method = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(method) > 1
	True

Check list inherit:
	>>> issubclass(MyList, list)
	True

Check empty list:
	>>> l = MyList()
	>>> l.print_sorted()
	[]

Check append:
	>>> l.append(1)
	>>> l.append(2)
	>>> l.append(3)
	>>> l.append(4)
	>>> print(l)
	[1, 2, 3, 4]

Check order:
	>>> l.print_sorted()
	[1, 2, 3, 4]

Check reverse:
	>>> l = MyList()
	>>> l.append(4)
	>>> l.append(3)
	>>> l.append(2)
	>>> l.append(1)
	>>> print(l)
	[4, 3, 2, 1]
	>>> l.print_sorted()
	[1, 2, 3, 4]
	>>> print(l)
	[4, 3, 2, 1]

Check negative:
	>>> l.append(-1)
	>>> l.append(5)
	>>> print(l)
	[4, 3, 2, 1, -1, 5]
	>>> l.print_sorted()
	[-1, 1, 2, 3, 4, 5]
	>>> print(l)
	[4, 3, 2, 1, -1, 5]

Check for all negative:
	>>> l = MyList()
	>>> l.append(-10)
	>>> l.append(-1)
	>>> l.append(-7)
	>>> l.append(-2)
	>>> l.append(-8)
	>>> print(l)
	[-10, -1, -7, -2, -8]
	>>> l.print_sorted()
	[-10, -8, -7, -2, -1]
	>>> print(l)
	[-10, -1, -7, -2, -8]

Check for too many arguments:
	>>> l.print_sorted(1)
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given
